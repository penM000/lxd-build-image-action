name: Publish LXD image
on:
  push:
    tags:
      "v*"


jobs:
  lxd:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: helloworld
    steps:
      -
          name: Checkout
          uses: actions/checkout@v2
      - # by https://github.com/docker/build-push-action/issues/37#issuecomment-720358308
        name: PrepareReg Names
        run: |
          echo REPOSITORY_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo IMAGE_TAG=$(echo ${{ github.ref }} | tr '[:upper:]' '[:lower:]' | awk '{split($0,a,"/"); print a[3]}') >> $GITHUB_ENV
      -
        name: install lxd
        run: |
          sudo snap install lxd
      -
        name: init lxd
        run: |
          sudo lxd init --auto
      
      - name: start ubuntu container
        run: | 
          sudo lxc launch ubuntu ubuntu
          sudo lxc config set ubuntu security.nesting 1

      - name: copy from repository to container
        run: |
          sudo lxc exec ubuntu -- mkdir /github-action
          sudo lxc file push -r ${{ github.workspace }}/* ubuntu/github-action
          sudo lxc exec ubuntu -- ls /
          sudo lxc exec ubuntu -- ls /github-action
      
      - name: run init.sh in container
        run: |
          sudo lxc exec ubuntu -- chmod +x /github-action/init.sh
          sudo lxc exec ubuntu --  sh -c "cd /github-action && ./init.sh"

      - name: remove repository file to container
        run: |
          sudo lxc exec ubuntu -- rm -r /github-action

      - name: export image
        run: |
          sudo lxc snapshot ubuntu
          sudo lxc publish ubuntu/snap0 --alias my-image
          sudo lxc image export my-image image

 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./image.tar.gz
          asset_name: image.tar.gz
          asset_content_type: application/gzip





